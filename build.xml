<project name="ivory" default="scripts" basedir=".">
	<description>Ivory</description>

	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="test" location="test" />

	<path id="classpath">
		<fileset dir=".">
			<include name="ivory.jar" />
		</fileset>
		<fileset dir="packages/">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="init">
		<tstamp />
		<condition property="platform" value="unix">
			<os family="unix" />
		</condition>
		<condition property="platform" value="unix">
			<os family="mac" />
		</condition>
		<condition property="platform" value="windows">
			<os family="windows" />
		</condition>
		<mkdir dir="${build}" />
	</target>

	<target name="compile" depends="init" description="compile the source">
		<!-- echo message="${toString:classpath}"/ -->
		<javac classpathref="classpath" srcdir="${src}/dist" destdir="${build}" optimize="on" debug="on">
			<!-- compilerarg value="-Xlint:unchecked"/ uncomment this to check for generics -->
		</javac>
		<javac classpathref="classpath" srcdir="${src}/dist-test" destdir="${build}" optimize="on" debug="on">
		</javac>
		<!-- javac classpathref="classpath" srcdir="${src}/sandbox" destdir="${build}" optimize="on" debug="on" -->
			<!-- compilerarg value="-Xlint:unchecked"/ uncomment this to check for generics -->
		<!-- /javac -->
	</target>

	<target name="lib" depends="compile" description="generate the distribution">
		<jar jarfile="ivory.jar" basedir="${build}" />
	</target>

	<target name="clean" description="clean up">
		<delete dir="${test}" />
		<delete dir="${build}" />
	</target>

	<target name="test" depends="lib" description="Execute Unit Tests">
		<mkdir dir="${test}" />
		<junit printsummary="yes" fork="yes" maxmemory="2048m">
			<sysproperty key="java.library.path" path="${lib}" />
			<sysproperty key="org.xml.sax.driver" value="org.apache.xerces.parsers.SAXParser" />
			<classpath refid="classpath" />

			<formatter type="xml" />
			<batchtest todir="${test}">
				<fileset dir="${build}">
					<include name="**/*Test.class" />
					<include name="ivory/regression/*.class" />
					<exclude name="ivory/regression/GroundTruth*.class" />
					<exclude name="ivory/regression/RegressionUtils.class" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${test}">
			<fileset dir="${test}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" styledir="etc/" todir="${test}" />
		</junitreport>

	</target>

	<target name="javadoc">
		<javadoc destdir="docs/api/" access="public" use="false" notree="false" nonavbar="false" noindex="false" splitindex="no" author="true" version="true" nodeprecatedlist="true" nodeprecated="true" classpathref="classpath">
			<fileset dir="src">
				<include name="dist/**/*.java" />
				<exclude name="dist/ivory/util/AnnotateClueRunAllWithURLs.java" />
				<exclude name="dist/ivory/util/AnnotateClueRunWithURLs.java" />
				<exclude name="dist/**/*Test.java" />
				<exclude name="dist/uk/**/*.java" />
				<exclude name="dist/org/**/*.java" />
			</fileset>
			<link href="http://java.sun.com/javase/6/docs/api/" />
			<link href="http://hadoop.apache.org/common/docs/current/api/" />
			<link href="http://www.umiacs.umd.edu/~jimmylin/Cloud9/docs/api//" />
		</javadoc>
	</target>

	<target name="scripts" depends="lib">
		<pathconvert property="classpath" refid="classpath" targetos="${platform}" />

		<condition property="suffix" value="sh">
			<equals arg1="${platform}" arg2="unix" />
		</condition>
		<condition property="suffix" value="bat">
			<equals arg1="${platform}" arg2="windows" />
		</condition>

		<condition property="param_prefix" value="$">
			<equals arg1="${platform}" arg2="unix" />
		</condition>
		<condition property="param_prefix" value="%">
			<equals arg1="${platform}" arg2="windows" />
		</condition>

		<condition property="java" value="java">
			<equals arg1="${platform}" arg2="unix" />
		</condition>
		<condition property="java" value="java">
			<equals arg1="${platform}" arg2="windows" />
		</condition>

		<condition property="cp_sep" value=":">
			<equals arg1="${platform}" arg2="unix" />
		</condition>
		<condition property="cp_sep" value=";">
			<equals arg1="${platform}" arg2="windows" />
		</condition>

		<property name="java_command" value="${java} -Xmx2g -classpath &quot;${classpath}&quot;" />

		<condition property="script_prefix" value="#!/bin/sh${line.separator}if test -s ~/.bashrc${line.separator}then${line.separator}source ~/.bashrc${line.separator}fi${line.separator}">
			<equals arg1="${platform}" arg2="unix" />
		</condition>
		<condition property="script_prefix" value="">
			<equals arg1="${platform}" arg2="windows" />
		</condition>

		<echo file="./etc/junit.${suffix}" message="${script_prefix}" />
		<echo file="./etc/junit.${suffix}" message="${java_command} org.junit.runner.JUnitCore " append="true" />
		<echo file="./etc/junit.${suffix}" message="${param_prefix}1" append="true" />

		<echo file="./etc/run.${suffix}" message="${script_prefix}" />
		<echo file="./etc/run.${suffix}" message="${java_command} " append="true" />
		<echo file="./etc/run.${suffix}" message="${param_prefix}1 ${param_prefix}2 ${param_prefix}3 ${param_prefix}4 ${param_prefix}5 ${param_prefix}6 ${param_prefix}7 ${param_prefix}8 ${param_prefix}9" append="true" />

	</target>

</project>
